<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTrade" xml:space="preserve">
    <value>Trade plan list</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Record_Status" xml:space="preserve">
    <value>Record Status</value>
  </data>
  <data name="AmortRate" xml:space="preserve">
    <value>Amort Rate</value>
  </data>
  <data name="AmountExe" xml:space="preserve">
    <value>Amount Exe</value>
  </data>
  <data name="Auth_Status" xml:space="preserve">
    <value>Auth Status</value>
  </data>
  <data name="BranchID" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="EffectDate" xml:space="preserve">
    <value>Effect Date</value>
  </data>
  <data name="GoodsID" xml:space="preserve">
    <value>Goods Id</value>
  </data>
  <data name="GoodsName" xml:space="preserve">
    <value>Goods Name</value>
  </data>
  <data name="lblTradeEdit" xml:space="preserve">
    <value>Trade plan </value>
  </data>
  <data name="MonthExe" xml:space="preserve">
    <value>Month Exe</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PlanID" xml:space="preserve">
    <value>Plan Id</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="RemainValue" xml:space="preserve">
    <value>RemainValue</value>
  </data>
  <data name="TradeName" xml:space="preserve">
    <value>Trade Name</value>
  </data>
  <data name="UnitID" xml:space="preserve">
    <value>Unit Id</value>
  </data>
  <data name="UsedAmt" xml:space="preserve">
    <value>Used Amount</value>
  </data>
  <data name="Verson" xml:space="preserve">
    <value>Verson</value>
  </data>
  <data name="YearExe" xml:space="preserve">
    <value>Year Exe</value>
  </data>
  <data name="ApproveValue" xml:space="preserve">
    <value>Approve Value</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>EndDate</value>
  </data>
  <data name="ExpectedValue" xml:space="preserve">
    <value>Expected Value</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>StartDate</value>
  </data>
  <data name="VerifyValue" xml:space="preserve">
    <value>Verify Value</value>
  </data>
  <data name="ConstructionList" xml:space="preserve">
    <value>Construction list</value>
  </data>
  <data name="lblConstruction" xml:space="preserve">
    <value>Construction plan list</value>
  </data>
  <data name="AssetGroup" xml:space="preserve">
    <value>Group Asset</value>
  </data>
  <data name="AssetID" xml:space="preserve">
    <value>Asset Id</value>
  </data>
  <data name="AssetName" xml:space="preserve">
    <value>Asset Name</value>
  </data>
  <data name="ConstID" xml:space="preserve">
    <value>ConstID</value>
  </data>
  <data name="ConstName" xml:space="preserve">
    <value>ConstName</value>
  </data>
  <data name="ExeDate" xml:space="preserve">
    <value>Date Exe</value>
  </data>
  <data name="lblAssetList" xml:space="preserve">
    <value>LIST OF BANK ASSETS</value>
  </data>
  <data name="lblConstList" xml:space="preserve">
    <value>CONSTRUCTION LIST</value>
  </data>
  <data name="lblLiquidation" xml:space="preserve">
    <value>Liquidation plan list</value>
  </data>
  <data name="lblLiquidList" xml:space="preserve">
    <value>LIQUIDATION LIST</value>
  </data>
  <data name="LiquidType" xml:space="preserve">
    <value>Liquid Type</value>
  </data>
  <data name="MonthLiquid" xml:space="preserve">
    <value>Month Liquid</value>
  </data>
  <data name="PlanName" xml:space="preserve">
    <value>Plan Name</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="RecordStatusAss" xml:space="preserve">
    <value>Asset Status</value>
  </data>
  <data name="RecoveryValue" xml:space="preserve">
    <value>Recovery Value</value>
  </data>
  <data name="btnAddAsset" xml:space="preserve">
    <value>Add asset</value>
  </data>
  <data name="QuantityExe" xml:space="preserve">
    <value>Quantity Exe</value>
  </data>
  <data name="QuantityRemain" xml:space="preserve">
    <value>Quantity Remain</value>
  </data>
  <data name="btnSendPlan" xml:space="preserve">
    <value>Send plan</value>
  </data>
  <data name="lblPlanInfo" xml:space="preserve">
    <value>PLAN INFORMATION</value>
  </data>
  <data name="PutLiquid" xml:space="preserve">
    <value>Put into liquidation</value>
  </data>
  <data name="RemainMonAmort" xml:space="preserve">
    <value>Remain Amort</value>
  </data>
  <data name="StatusAmort" xml:space="preserve">
    <value>Status Amort</value>
  </data>
  <data name="StatusAsset" xml:space="preserve">
    <value>Status Asset</value>
  </data>
  <data name="PlanMonth" xml:space="preserve">
    <value>Plan Month</value>
  </data>
  <data name="lblAddConstruction" xml:space="preserve">
    <value>Add new construction</value>
  </data>
  <data name="lblEditConstruction" xml:space="preserve">
    <value>Construction detail</value>
  </data>
  <data name="ConstructionRepair" xml:space="preserve">
    <value>New Construction/Repair</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Checked" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="Amort_End_DT" xml:space="preserve">
    <value>Amort end date</value>
  </data>
  <data name="Amort_Firt_DT" xml:space="preserve">
    <value>Amort firt date</value>
  </data>
  <data name="MonthOfAmort" xml:space="preserve">
    <value>Month of amort</value>
  </data>
  <data name="BranchName" xml:space="preserve">
    <value>BranchName</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="SupplierID" xml:space="preserve">
    <value>Supplier ID</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="lblLiquidAsset" xml:space="preserve">
    <value>List of liquid asset</value>
  </data>
  <data name="lblTotality" xml:space="preserve">
    <value>Totality</value>
  </data>
  <data name="Div_Id" xml:space="preserve">
    <value>Div Id</value>
  </data>
  <data name="Const_Type" xml:space="preserve">
    <value>Construction Type</value>
  </data>
  <data name="lblSendPlanError" xml:space="preserve">
    <value>Send plan is false</value>
  </data>
  <data name="lblSendPlanSuccessfull" xml:space="preserve">
    <value>Send plan successful</value>
  </data>
  <data name="lblDoneValue" xml:space="preserve">
    <value>Total value worked</value>
  </data>
  <data name="lblStepStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="lblPer" xml:space="preserve">
    <value>Percent</value>
  </data>
  <data name="lblPlanList" xml:space="preserve">
    <value>Plan list</value>
  </data>
  <data name="lblTradeDetail" xml:space="preserve">
    <value>Trade detail</value>
  </data>
  <data name="btnSendBack" xml:space="preserve">
    <value>Send back</value>
  </data>
  <data name="msgSendBack" xml:space="preserve">
    <value>Plans have been sent back</value>
  </data>
  <data name="msgSendPlan" xml:space="preserve">
    <value>Plan sent successfully</value>
  </data>
  <data name="CurrentYear" xml:space="preserve">
    <value>Current year</value>
  </data>
  <data name="lblConList" xml:space="preserve">
    <value>Construction list</value>
  </data>
  <data name="Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="lblPlanBranch" xml:space="preserve">
    <value>Branch Name</value>
  </data>
</root>