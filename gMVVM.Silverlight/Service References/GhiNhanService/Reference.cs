//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace gMVVM.GhiNhanService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CM_DOMAIN", Namespace="http://schemas.datacontract.org/2004/07/gMVVM.Web.Services.KeHoach")]
    public partial class CM_DOMAIN : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> APPROVE_DTField;
        
        private string AUTH_STATUSField;
        
        private string CHECKER_IDField;
        
        private System.Nullable<System.DateTime> CREATE_DTField;
        
        private string DOMAIN_CODEField;
        
        private string DOMAIN_IDField;
        
        private string DOMAIN_NAMEField;
        
        private System.Nullable<System.DateTime> EDIT_DATEField;
        
        private System.Nullable<System.DateTime> END_DATEField;
        
        private string MAKER_IDField;
        
        private string NOTESField;
        
        private string RECORD_STATUSField;
        
        private System.Nullable<System.DateTime> START_DATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> APPROVE_DT {
            get {
                return this.APPROVE_DTField;
            }
            set {
                if ((this.APPROVE_DTField.Equals(value) != true)) {
                    this.APPROVE_DTField = value;
                    this.RaisePropertyChanged("APPROVE_DT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUTH_STATUS {
            get {
                return this.AUTH_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.AUTH_STATUSField, value) != true)) {
                    this.AUTH_STATUSField = value;
                    this.RaisePropertyChanged("AUTH_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKER_ID {
            get {
                return this.CHECKER_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKER_IDField, value) != true)) {
                    this.CHECKER_IDField = value;
                    this.RaisePropertyChanged("CHECKER_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATE_DT {
            get {
                return this.CREATE_DTField;
            }
            set {
                if ((this.CREATE_DTField.Equals(value) != true)) {
                    this.CREATE_DTField = value;
                    this.RaisePropertyChanged("CREATE_DT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOMAIN_CODE {
            get {
                return this.DOMAIN_CODEField;
            }
            set {
                if ((object.ReferenceEquals(this.DOMAIN_CODEField, value) != true)) {
                    this.DOMAIN_CODEField = value;
                    this.RaisePropertyChanged("DOMAIN_CODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOMAIN_ID {
            get {
                return this.DOMAIN_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.DOMAIN_IDField, value) != true)) {
                    this.DOMAIN_IDField = value;
                    this.RaisePropertyChanged("DOMAIN_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOMAIN_NAME {
            get {
                return this.DOMAIN_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DOMAIN_NAMEField, value) != true)) {
                    this.DOMAIN_NAMEField = value;
                    this.RaisePropertyChanged("DOMAIN_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EDIT_DATE {
            get {
                return this.EDIT_DATEField;
            }
            set {
                if ((this.EDIT_DATEField.Equals(value) != true)) {
                    this.EDIT_DATEField = value;
                    this.RaisePropertyChanged("EDIT_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> END_DATE {
            get {
                return this.END_DATEField;
            }
            set {
                if ((this.END_DATEField.Equals(value) != true)) {
                    this.END_DATEField = value;
                    this.RaisePropertyChanged("END_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAKER_ID {
            get {
                return this.MAKER_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.MAKER_IDField, value) != true)) {
                    this.MAKER_IDField = value;
                    this.RaisePropertyChanged("MAKER_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NOTES {
            get {
                return this.NOTESField;
            }
            set {
                if ((object.ReferenceEquals(this.NOTESField, value) != true)) {
                    this.NOTESField = value;
                    this.RaisePropertyChanged("NOTES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECORD_STATUS {
            get {
                return this.RECORD_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.RECORD_STATUSField, value) != true)) {
                    this.RECORD_STATUSField = value;
                    this.RaisePropertyChanged("RECORD_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> START_DATE {
            get {
                return this.START_DATEField;
            }
            set {
                if ((this.START_DATEField.Equals(value) != true)) {
                    this.START_DATEField = value;
                    this.RaisePropertyChanged("START_DATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CM_DOMAIN_InsResult", Namespace="http://schemas.datacontract.org/2004/07/gMVVM.Web.Services.KeHoach")]
    public partial class CM_DOMAIN_InsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DOMAIN_IDField;
        
        private string ErrorDescField;
        
        private string ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOMAIN_ID {
            get {
                return this.DOMAIN_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.DOMAIN_IDField, value) != true)) {
                    this.DOMAIN_IDField = value;
                    this.RaisePropertyChanged("DOMAIN_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GhiNhanService.IGhiNhan")]
    public interface IGhiNhan {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGhiNhan/BaoCaoGhiNhan", ReplyAction="http://tempuri.org/IGhiNhan/BaoCaoGhiNhanResponse")]
        System.IAsyncResult BeginBaoCaoGhiNhan(string data, System.AsyncCallback callback, object asyncState);
        
        string EndBaoCaoGhiNhan(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGhiNhanChannel : gMVVM.GhiNhanService.IGhiNhan, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BaoCaoGhiNhanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BaoCaoGhiNhanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GhiNhanClient : System.ServiceModel.ClientBase<gMVVM.GhiNhanService.IGhiNhan>, gMVVM.GhiNhanService.IGhiNhan {
        
        private BeginOperationDelegate onBeginBaoCaoGhiNhanDelegate;
        
        private EndOperationDelegate onEndBaoCaoGhiNhanDelegate;
        
        private System.Threading.SendOrPostCallback onBaoCaoGhiNhanCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GhiNhanClient() {
        }
        
        public GhiNhanClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GhiNhanClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GhiNhanClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GhiNhanClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<BaoCaoGhiNhanCompletedEventArgs> BaoCaoGhiNhanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult gMVVM.GhiNhanService.IGhiNhan.BeginBaoCaoGhiNhan(string data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBaoCaoGhiNhan(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string gMVVM.GhiNhanService.IGhiNhan.EndBaoCaoGhiNhan(System.IAsyncResult result) {
            return base.Channel.EndBaoCaoGhiNhan(result);
        }
        
        private System.IAsyncResult OnBeginBaoCaoGhiNhan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string data = ((string)(inValues[0]));
            return ((gMVVM.GhiNhanService.IGhiNhan)(this)).BeginBaoCaoGhiNhan(data, callback, asyncState);
        }
        
        private object[] OnEndBaoCaoGhiNhan(System.IAsyncResult result) {
            string retVal = ((gMVVM.GhiNhanService.IGhiNhan)(this)).EndBaoCaoGhiNhan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBaoCaoGhiNhanCompleted(object state) {
            if ((this.BaoCaoGhiNhanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BaoCaoGhiNhanCompleted(this, new BaoCaoGhiNhanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BaoCaoGhiNhanAsync(string data) {
            this.BaoCaoGhiNhanAsync(data, null);
        }
        
        public void BaoCaoGhiNhanAsync(string data, object userState) {
            if ((this.onBeginBaoCaoGhiNhanDelegate == null)) {
                this.onBeginBaoCaoGhiNhanDelegate = new BeginOperationDelegate(this.OnBeginBaoCaoGhiNhan);
            }
            if ((this.onEndBaoCaoGhiNhanDelegate == null)) {
                this.onEndBaoCaoGhiNhanDelegate = new EndOperationDelegate(this.OnEndBaoCaoGhiNhan);
            }
            if ((this.onBaoCaoGhiNhanCompletedDelegate == null)) {
                this.onBaoCaoGhiNhanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBaoCaoGhiNhanCompleted);
            }
            base.InvokeAsync(this.onBeginBaoCaoGhiNhanDelegate, new object[] {
                        data}, this.onEndBaoCaoGhiNhanDelegate, this.onBaoCaoGhiNhanCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override gMVVM.GhiNhanService.IGhiNhan CreateChannel() {
            return new GhiNhanClientChannel(this);
        }
        
        private class GhiNhanClientChannel : ChannelBase<gMVVM.GhiNhanService.IGhiNhan>, gMVVM.GhiNhanService.IGhiNhan {
            
            public GhiNhanClientChannel(System.ServiceModel.ClientBase<gMVVM.GhiNhanService.IGhiNhan> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginBaoCaoGhiNhan(string data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("BaoCaoGhiNhan", _args, callback, asyncState);
                return _result;
            }
            
            public string EndBaoCaoGhiNhan(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("BaoCaoGhiNhan", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GhiNhanService.ICM_Domain")]
    public interface ICM_Domain {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICM_Domain/InsertDomain", ReplyAction="http://tempuri.org/ICM_Domain/InsertDomainResponse")]
        System.IAsyncResult BeginInsertDomain(gMVVM.GhiNhanService.CM_DOMAIN data, System.AsyncCallback callback, object asyncState);
        
        gMVVM.GhiNhanService.CM_DOMAIN_InsResult EndInsertDomain(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICM_DomainChannel : gMVVM.GhiNhanService.ICM_Domain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public gMVVM.GhiNhanService.CM_DOMAIN_InsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((gMVVM.GhiNhanService.CM_DOMAIN_InsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CM_DomainClient : System.ServiceModel.ClientBase<gMVVM.GhiNhanService.ICM_Domain>, gMVVM.GhiNhanService.ICM_Domain {
        
        private BeginOperationDelegate onBeginInsertDomainDelegate;
        
        private EndOperationDelegate onEndInsertDomainDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDomainCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CM_DomainClient() {
        }
        
        public CM_DomainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CM_DomainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CM_DomainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CM_DomainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InsertDomainCompletedEventArgs> InsertDomainCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult gMVVM.GhiNhanService.ICM_Domain.BeginInsertDomain(gMVVM.GhiNhanService.CM_DOMAIN data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDomain(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        gMVVM.GhiNhanService.CM_DOMAIN_InsResult gMVVM.GhiNhanService.ICM_Domain.EndInsertDomain(System.IAsyncResult result) {
            return base.Channel.EndInsertDomain(result);
        }
        
        private System.IAsyncResult OnBeginInsertDomain(object[] inValues, System.AsyncCallback callback, object asyncState) {
            gMVVM.GhiNhanService.CM_DOMAIN data = ((gMVVM.GhiNhanService.CM_DOMAIN)(inValues[0]));
            return ((gMVVM.GhiNhanService.ICM_Domain)(this)).BeginInsertDomain(data, callback, asyncState);
        }
        
        private object[] OnEndInsertDomain(System.IAsyncResult result) {
            gMVVM.GhiNhanService.CM_DOMAIN_InsResult retVal = ((gMVVM.GhiNhanService.ICM_Domain)(this)).EndInsertDomain(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertDomainCompleted(object state) {
            if ((this.InsertDomainCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDomainCompleted(this, new InsertDomainCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDomainAsync(gMVVM.GhiNhanService.CM_DOMAIN data) {
            this.InsertDomainAsync(data, null);
        }
        
        public void InsertDomainAsync(gMVVM.GhiNhanService.CM_DOMAIN data, object userState) {
            if ((this.onBeginInsertDomainDelegate == null)) {
                this.onBeginInsertDomainDelegate = new BeginOperationDelegate(this.OnBeginInsertDomain);
            }
            if ((this.onEndInsertDomainDelegate == null)) {
                this.onEndInsertDomainDelegate = new EndOperationDelegate(this.OnEndInsertDomain);
            }
            if ((this.onInsertDomainCompletedDelegate == null)) {
                this.onInsertDomainCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDomainCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDomainDelegate, new object[] {
                        data}, this.onEndInsertDomainDelegate, this.onInsertDomainCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override gMVVM.GhiNhanService.ICM_Domain CreateChannel() {
            return new CM_DomainClientChannel(this);
        }
        
        private class CM_DomainClientChannel : ChannelBase<gMVVM.GhiNhanService.ICM_Domain>, gMVVM.GhiNhanService.ICM_Domain {
            
            public CM_DomainClientChannel(System.ServiceModel.ClientBase<gMVVM.GhiNhanService.ICM_Domain> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertDomain(gMVVM.GhiNhanService.CM_DOMAIN data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("InsertDomain", _args, callback, asyncState);
                return _result;
            }
            
            public gMVVM.GhiNhanService.CM_DOMAIN_InsResult EndInsertDomain(System.IAsyncResult result) {
                object[] _args = new object[0];
                gMVVM.GhiNhanService.CM_DOMAIN_InsResult _result = ((gMVVM.GhiNhanService.CM_DOMAIN_InsResult)(base.EndInvoke("InsertDomain", _args, result)));
                return _result;
            }
        }
    }
}
